[package]
name = "daa-compute"
version = "0.2.1"
edition = "2021"
authors = ["DAA Compute Team"]
description = "Distributed training framework with DiLoCo-style federated SGD"
license = "MIT"
repository = "https://github.com/ruvnet/daa"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# Async runtime
tokio = { version = "1.35", features = ["full"] }
async-trait = "0.1"

# P2P networking
libp2p = { version = "0.53", features = ["kad", "gossipsub", "mdns", "noise", "tcp", "yamux", "websocket", "relay", "identify", "upnp", "ping", "autonat", "dcutr", "dns", "macros", "tokio"] }
libp2p-gossipsub = "0.46"
igd-next = "0.14"
if-addrs = "0.10"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Compression
zstd = { version = "0.12", default-features = false }
lz4 = "1.24"
snap = "1.1"

# Concurrency
dashmap = "5.5"
parking_lot = "0.12"
crossbeam = "0.8"
flume = "0.11"
once_cell = "1.21"
arc-swap = "1.7"

# Networking utilities
stun = "0.7"
webrtc-util = "0.10"
bytes = "1.10"
turn = "0.7"

# Monitoring
prometheus-client = "0.22"

# Crypto
blake3 = "1.5"
ring = "0.17"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Utilities
uuid = { version = "1.6", features = ["v4", "serde"] }
rand = "0.8"
sha2 = "0.10"
futures = "0.3"
lazy_static = "1.4"

# DAA dependencies - temporarily commented for publishing
# daa-ai = { version = "0.2.0" }
# daa-chain = { version = "0.2.0" }
# daa-orchestrator = { version = "0.2.0" }
# daa-rules = { version = "0.2.0" }

# Time
chrono = { version = "0.4", features = ["serde"] }

# WASM dependencies (only when targeting wasm32)
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
console_error_panic_hook = { version = "0.1", optional = true }
wasm-logger = { version = "0.2", optional = true }
getrandom = { version = "0.2", features = ["js"] }
libp2p-webrtc-websys = "0.4"

# Web APIs for browser support
web-sys = { version = "0.3", features = [
    "console",
    "Window",
    "Document",
    "Element",
    "Performance",
    "Crypto",
    "SubtleCrypto",
    "WebSocket",
    "MessageEvent",
    "CloseEvent",
    "ErrorEvent",
    "RtcPeerConnection",
    "RtcPeerConnectionIceEvent",
    "RtcSdpType",
    "RtcSessionDescription",
    "RtcSessionDescriptionInit",
    "RtcConfiguration",
    "RtcIceServer",
    "RtcDataChannel",
    "RtcDataChannelEvent",
    "MediaStream",
    "MediaStreamTrack",
    "Navigator"
] }


# Non-WASM dependencies
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
libp2p-webrtc = { version = "0.9.0-alpha", features = ["tokio"] }

[dev-dependencies]
tokio-test = "0.4"
proptest = "1.4"
criterion = { version = "0.5", features = ["async_tokio"] }

[[bench]]
name = "training_benchmarks"
harness = false

[[bench]]
name = "p2p_benchmarks"
harness = false

[[bench]]
name = "consensus_benchmarks"
harness = false

[[bench]]
name = "resource_benchmarks"
harness = false

[[bench]]
name = "pytorch_comparison"
harness = false

[features]
default = ["full"]
full = ["gpu-support", "quantum-crypto"]
gpu-support = []
quantum-crypto = []
browser = ["browser-wasm"]
browser-wasm = ["console_error_panic_hook", "wasm-logger"]

[package.metadata.wasm-pack]
"wasm-opt" = ["-Os", "--enable-simd"]  # Additional optimizations