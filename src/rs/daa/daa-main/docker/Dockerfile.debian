# Multi-stage Dockerfile for DAA SDK - Debian variant
# This creates a production-ready image with all DAA components

# Build stage
FROM rust:1.75-bookworm as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libsqlite3-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy workspace configuration
COPY Cargo.toml Cargo.lock ./
COPY crates/ ./crates/

# Copy all crate sources
COPY daa-*/ ./
COPY src/ ./src/

# Build the project
RUN cargo build --release --workspace

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    libsqlite3-0 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && useradd -r -s /bin/false -m -d /app daa

# Copy binaries from builder
COPY --from=builder --chown=daa:daa /app/target/release/daa-cli /usr/local/bin/
COPY --from=builder --chown=daa:daa /app/target/release/daa-orchestrator /usr/local/bin/
COPY --from=builder --chown=daa:daa /app/target/release/daa-mcp-server /usr/local/bin/

# Create app directory and set permissions
RUN mkdir -p /app/data /app/logs /app/config \
    && chown -R daa:daa /app

# Switch to non-root user
USER daa
WORKDIR /app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command
CMD ["daa-orchestrator"]

# Metadata
LABEL org.opencontainers.image.title="DAA SDK"
LABEL org.opencontainers.image.description="Decentralized Autonomous Architecture SDK"
LABEL org.opencontainers.image.vendor="DAA Team"
LABEL org.opencontainers.image.source="https://github.com/daa-hq/daa-sdk"
LABEL org.opencontainers.image.documentation="https://docs.rs/daa-sdk"