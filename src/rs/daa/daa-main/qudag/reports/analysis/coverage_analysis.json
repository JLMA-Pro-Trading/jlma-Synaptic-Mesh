{
  "crypto": {
    "module_name": "crypto",
    "source_files": [
      "/workspaces/QuDAG/core/crypto/src/hqc.rs",
      "/workspaces/QuDAG/core/crypto/src/signature.rs",
      "/workspaces/QuDAG/core/crypto/src/util.rs",
      "/workspaces/QuDAG/core/crypto/src/metrics.rs",
      "/workspaces/QuDAG/core/crypto/src/fingerprint.rs",
      "/workspaces/QuDAG/core/crypto/src/lib.rs",
      "/workspaces/QuDAG/core/crypto/src/hash.rs",
      "/workspaces/QuDAG/core/crypto/src/error.rs",
      "/workspaces/QuDAG/core/crypto/src/ml_kem/mod.rs",
      "/workspaces/QuDAG/core/crypto/src/kem/mod.rs",
      "/workspaces/QuDAG/core/crypto/src/kem/ml_kem.rs",
      "/workspaces/QuDAG/core/crypto/src/optimized/mod.rs",
      "/workspaces/QuDAG/core/crypto/src/optimized/buffer_pool.rs",
      "/workspaces/QuDAG/core/crypto/src/optimized/ml_kem_optimized.rs",
      "/workspaces/QuDAG/core/crypto/src/optimized/cache.rs",
      "/workspaces/QuDAG/core/crypto/src/encryption/mod.rs",
      "/workspaces/QuDAG/core/crypto/src/encryption/hqc.rs",
      "/workspaces/QuDAG/core/crypto/src/signatures/mod.rs",
      "/workspaces/QuDAG/core/crypto/src/signatures/ml_dsa.rs",
      "/workspaces/QuDAG/core/crypto/src/ml_dsa/mod.rs"
    ],
    "test_files": [
      "/workspaces/QuDAG/core/crypto/tests/test_vectors.rs",
      "/workspaces/QuDAG/core/crypto/tests/ml_dsa_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/timing_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/integration_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/ml_kem_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/hqc_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/fingerprint_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/ml_dsa_comprehensive_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/security_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/basic_ml_dsa_test.rs",
      "/workspaces/QuDAG/core/crypto/tests/prop_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/concurrent_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/integration/main.rs",
      "/workspaces/QuDAG/core/crypto/tests/security/ml_dsa_security_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/security/constant_time_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/security/memory_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/security/side_channel_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/security/ml_kem_security_tests.rs",
      "/workspaces/QuDAG/core/crypto/tests/security/implementation_validation_tests.rs",
      "/workspaces/QuDAG/core/crypto/src/hqc.rs",
      "/workspaces/QuDAG/core/crypto/src/kem/ml_kem.rs",
      "/workspaces/QuDAG/core/crypto/src/optimized/buffer_pool.rs",
      "/workspaces/QuDAG/core/crypto/src/optimized/ml_kem_optimized.rs",
      "/workspaces/QuDAG/core/crypto/src/optimized/cache.rs",
      "/workspaces/QuDAG/core/crypto/src/encryption/hqc.rs",
      "/workspaces/QuDAG/core/crypto/src/signatures/ml_dsa.rs",
      "/workspaces/QuDAG/core/crypto/src/ml_dsa/mod.rs"
    ],
    "functions": [
      "generate_random_vector",
      "test_constant_time_properties",
      "generate_sparse_vector",
      "bits_to_bytes",
      "new",
      "from_bytes",
      "encrypt",
      "secret_key_len",
      "generate_keypair",
      "test_security_properties",
      "keygen",
      "decode_message",
      "test_invalid_message_length",
      "test_hqc256_compatibility",
      "test_zero_message",
      "poly_mult_add",
      "test_bit_operations",
      "test_error_recovery",
      "poly_mult_sub",
      "test_parameters",
      "encode_message",
      "test_polynomial_operations",
      "test_encryption_decryption",
      "test_key_generation",
      "as_ref",
      "bytes_to_bits",
      "test_different_security_levels",
      "ciphertext_len",
      "test_key_serialization",
      "public_key_len",
      "decrypt",
      "as_bytes",
      "sign",
      "keygen",
      "verify",
      "ct_select",
      "ct_eq",
      "record_latency",
      "record_cache_hit",
      "get_summary",
      "record_key_op",
      "record_cache_miss",
      "new",
      "record_decryption",
      "get_latency_percentile",
      "record_encryption",
      "data",
      "verify",
      "ct_eq",
      "eq",
      "signature",
      "generate",
      "update",
      "finalize",
      "new",
      "as_bytes",
      "hash",
      "into_bytes",
      "keygen",
      "encapsulate",
      "decapsulate",
      "get_metrics",
      "keygen",
      "eq",
      "as_bytes",
      "decapsulate",
      "encapsulate",
      "new",
      "from_bytes",
      "public_key",
      "as_ref",
      "secret_key",
      "test_shared_secret_size",
      "test_ciphertext_size",
      "keygen",
      "decapsulate",
      "test_key_sizes",
      "encapsulate",
      "test_ml_kem_768",
      "test_buffer_pool_basic",
      "is_empty",
      "resize",
      "deref_mut",
      "as_mut",
      "new",
      "return_buffer",
      "calculate_hit_rate",
      "clear",
      "test_buffer_pool_stats",
      "test_buffer_pool_size_categories",
      "deref",
      "as_mut_slice",
      "len",
      "acquire_large",
      "stats",
      "acquire_small",
      "acquire",
      "acquire_medium",
      "as_ref",
      "drop",
      "as_slice",
      "encapsulate_standard",
      "reset_metrics",
      "test_optimized_keygen",
      "new",
      "encapsulate_optimized",
      "batch_keygen_parallel",
      "decapsulate_optimized",
      "keygen",
      "keygen_optimized",
      "test_metrics_tracking",
      "encapsulate_with_cache",
      "encapsulate",
      "test_batch_processor",
      "get_metrics",
      "test_batch_keygen",
      "warm_cache",
      "get_next_instance",
      "get_aggregated_metrics",
      "decapsulate",
      "batch_keygen",
      "default",
      "test_cache_warming",
      "test_optimized_encapsulation",
      "test_key_cache_basic",
      "is_empty",
      "new",
      "from_bytes",
      "get",
      "clear",
      "contains",
      "capacity",
      "for_transport",
      "len",
      "test_precomputed_context",
      "stats",
      "test_cache_stats",
      "cleanup_expired",
      "test_key_hash",
      "insert",
      "test_cache_cleanup",
      "for_ml_kem",
      "fmt",
      "fmt",
      "encrypt",
      "keygen",
      "test_hqc_256_encrypt_decrypt",
      "as_bytes",
      "decrypt",
      "from_bytes",
      "test_hqc_256_keygen",
      "as_ref",
      "fmt",
      "sign",
      "generate_keypair",
      "test_memory_zeroization",
      "verify",
      "test_invalid_signature",
      "drop",
      "test_signature_roundtrip",
      "test_timing_consistency",
      "generate_secret_vectors",
      "test_basic_functionality",
      "generate_uniform_poly",
      "unpack_z",
      "polynomial_multiply_add",
      "decompose_coefficient",
      "from_bytes",
      "generate_eta_poly",
      "sign",
      "pack_t1",
      "verify",
      "keygen",
      "generate_matrix_a",
      "secure_zero",
      "generate",
      "sign_message_internal",
      "matrix_vector_multiply",
      "pack_t0",
      "secret_key",
      "unpack_t1",
      "decompose_t",
      "parse_signature",
      "pack_secret_key",
      "public_key",
      "pack_eta_poly",
      "pack_public_key",
      "verify_signature_internal",
      "as_bytes"
    ],
    "tested_functions": [
      "invalid_seeds",
      "generate_keypair",
      "len",
      "constant_time_compare",
      "kat_vectors",
      "decapsulate",
      "encapsulate",
      "let",
      "unwrap",
      "from",
      "from_seed",
      "sign",
      "mldsa_invalid_signature",
      "is_ok",
      "verify",
      "is_empty",
      "thread_rng",
      "Err",
      "expect",
      "Ok",
      "fill_bytes",
      "mldsa_sign_verify",
      "generate",
      "mldsa_message_tampering",
      "mldsa_random_inputs",
      "from_bytes",
      "public_key",
      "mldsa_key_generation",
      "measure_time",
      "generate_keypair",
      "constant_time_decapsulation",
      "constant_time_encapsulation",
      "constant_time_compare",
      "thread_rng",
      "decapsulate",
      "push",
      "copy_from_slice",
      "constant_time_comparison",
      "fill_bytes",
      "encapsulate",
      "let",
      "unwrap",
      "with_capacity",
      "constant_time_keypair_generation",
      "kem_integration",
      "copy_from_slice",
      "performance_requirements",
      "new",
      "align_of_val",
      "sign",
      "encrypt",
      "verify",
      "keygen",
      "elapsed",
      "encapsulate",
      "signature_integration",
      "len",
      "memory_safety",
      "encryption_integration",
      "expect",
      "as_ref",
      "decapsulate",
      "now",
      "let",
      "decrypt",
      "key_cache_functionality",
      "abs",
      "new",
      "from_bytes",
      "mlkem_encapsulation_decapsulation",
      "mlkem_invalid_inputs",
      "keygen",
      "unwrap_or_else",
      "elapsed",
      "encapsulate",
      "timing_consistency",
      "mlkem_with_test_vectors",
      "len",
      "get_metrics",
      "thread_rng",
      "is_err",
      "push",
      "as_nanos",
      "mlkem_random_keys",
      "expect",
      "constant_time_operations",
      "time",
      "decapsulate",
      "fill_bytes",
      "now",
      "mlkem_key_generation",
      "let",
      "as_bytes",
      "is_empty",
      "hqc_long_message",
      "from_bytes",
      "hqc_encryption_decryption",
      "hqc_key_generation",
      "encrypt",
      "hqc_random_keys_and_messages",
      "hqc_invalid_ciphertext",
      "keygen",
      "Ok",
      "min",
      "decoded",
      "len",
      "thread_rng",
      "expect",
      "fill_bytes",
      "let",
      "decrypt",
      "as_bytes",
      "data",
      "different_data_produces_different_fingerprints",
      "is_ok",
      "fingerprint_generation_and_verification",
      "verify",
      "large_data_fingerprint",
      "empty_data_fingerprint",
      "fingerprint_memory_safety",
      "thread_rng",
      "as_ptr",
      "is_err",
      "drop",
      "fingerprint_constant_time_comparison",
      "generate",
      "let",
      "unwrap",
      "fingerprint_verification_with_wrong_key",
      "ml_dsa_key_generation_determinism",
      "ml_dsa_multiple_signatures",
      "ml_dsa_verification_failure",
      "ml_dsa_timing_consistency",
      "new",
      "requirements",
      "from_bytes",
      "iter",
      "from_millis",
      "ml_dsa_verify_tampered_signature",
      "sign",
      "different",
      "verify",
      "ml_dsa_large_message",
      "elapsed",
      "as_ptr",
      "generate",
      "ml_dsa_empty_message",
      "ml_dsa_constant_time_operations",
      "secret_key",
      "ml_dsa_verify_wrong_message",
      "any",
      "is_ok",
      "len",
      "consistent",
      "thread_rng",
      "is_err",
      "push",
      "ml_dsa_sign_verify",
      "clone",
      "windows",
      "unwrap",
      "public_key",
      "from_seed",
      "seeds",
      "ml_dsa_security_properties",
      "ml_dsa_key_generation",
      "unwrap_err",
      "ml_dsa_memory_zeroization",
      "ml_dsa_invalid_key_sizes",
      "ml_dsa_property_based_correctness",
      "ml_dsa_signature_uniqueness",
      "all",
      "now",
      "drop",
      "ml_dsa_performance_benchmarks",
      "iter",
      "sign",
      "verify",
      "timing_resistance",
      "keygen",
      "encapsulate",
      "generate",
      "constant_time_comparison",
      "zeroize",
      "constant_time_zeroization",
      "thread_rng",
      "expect",
      "constant_time_eq",
      "ct_eq",
      "decapsulate",
      "all",
      "let",
      "unwrap_u8",
      "constant_time_equality",
      "ml_dsa_basic_functionality",
      "ml_dsa_types_exist",
      "encryption",
      "kem_key_uniqueness",
      "change",
      "is_empty",
      "hash_avalanche_effect",
      "as_bytes_mut",
      "blake3",
      "new",
      "iter",
      "from",
      "ml_kem_error_conditions",
      "sign",
      "encrypt",
      "generate_keypair",
      "different",
      "zip",
      "ml_kem_mathematical_properties",
      "hash_function_properties",
      "verify",
      "fingerprint_properties",
      "hqc_error_propagation",
      "ml_dsa_key_size_invariants",
      "Err",
      "Ok",
      "for",
      "encapsulate",
      "generate",
      "count_ones",
      "hash",
      "ml_kem_key_size_invariants",
      "len",
      "is_ok",
      "signature_tampering",
      "hybrid_crypto_properties",
      "thread_rng",
      "is_err",
      "push",
      "encryption_tampering",
      "clone",
      "unwrap",
      "from_seed",
      "data",
      "signature_roundtrip",
      "constant_time_compare",
      "encryption_roundtrip",
      "decapsulate",
      "ml_dsa_mathematical_properties",
      "fingerprint_verification_properties",
      "kem_roundtrip",
      "insert",
      "let",
      "decrypt",
      "as_bytes",
      "hqc_mathematical_properties",
      "ml_dsa_signature_properties",
      "map",
      "crypto_parallel_rayon",
      "keypair",
      "ml_dsa_constant_time_verification",
      "new",
      "from_bytes",
      "sign",
      "ml_dsa_key_randomness",
      "verify",
      "ml_dsa_secure_error_handling",
      "to_vec",
      "elapsed",
      "ml_dsa_fault_injection_resistance",
      "generate",
      "ml_dsa_deterministic_keygen",
      "ml_dsa_memory_access_patterns",
      "ml_dsa_cross_key_contamination",
      "secret_key",
      "len",
      "is_ok",
      "thread_rng",
      "is_err",
      "push",
      "clone",
      "unwrap",
      "expect",
      "public_key",
      "from_seed",
      "ml_dsa_key_recovery_resistance",
      "ml_dsa_security_properties",
      "wrapping_add",
      "ml_dsa_memory_zeroization",
      "ml_dsa_signature_uniqueness",
      "ml_dsa_signature_malleability",
      "now",
      "drop",
      "ml_dsa_side_channel_resistance",
      "ml_dsa_signature_independent_timing",
      "message",
      "sign",
      "black_box",
      "select",
      "encrypt",
      "keygen",
      "verify_constant_time",
      "mlkem_operations_constant_time",
      "let",
      "from",
      "hqc_operations_constant_time",
      "mldsa_operations_constant_time",
      "map",
      "stack_overflow_protection",
      "verify_memory_patterns",
      "copy_from_slice",
      "memory_bounds_checking",
      "memory_leak_detection",
      "iter",
      "encryption_memory_safety",
      "fence",
      "keygen",
      "alloc",
      "to_vec",
      "as_ptr",
      "elapsed",
      "encapsulate",
      "min",
      "secure_memory_allocation",
      "from_raw_parts_mut",
      "measure_constant_time",
      "zeroize",
      "recursive_crypto_test",
      "len",
      "from_size_align",
      "valgrind_memory_safety",
      "count",
      "constant_time_memory_comparison",
      "filter",
      "unwrap",
      "shared_secret_handling",
      "signature_memory_safety",
      "vec",
      "ct_eq",
      "decapsulate",
      "mlkem_key_lifecycle",
      "now",
      "memory_alignment",
      "let",
      "as_bytes",
      "allocate_aligned_buffer",
      "sign",
      "encrypt",
      "collect_cache_traces",
      "collect_power_trace",
      "cache_timing_analysis",
      "is_ok",
      "branch_timing_analysis",
      "concat",
      "verify",
      "keygen",
      "mldsa_power_analysis",
      "decapsulate",
      "collect_branch_traces",
      "encapsulate",
      "mlkem_power_analysis",
      "hqc_power_analysis",
      "let",
      "unwrap",
      "keys",
      "try_into",
      "new",
      "content",
      "mlkem_memory_cleanup",
      "keygen",
      "key_cache_behavior",
      "to_vec",
      "mlkem_constant_time",
      "elapsed",
      "Ciphertext",
      "encapsulate",
      "zeroize",
      "len",
      "push",
      "as_nanos",
      "unwrap",
      "mlkem_timing_consistency",
      "as_ref",
      "ciphertext",
      "unwrap_err",
      "mlkem_error_masking",
      "decapsulate",
      "now",
      "shared_secret_uniqueness",
      "let",
      "map_err",
      "map",
      "shared_secret_entropy",
      "new",
      "from_bytes",
      "with_capacity",
      "Sequential",
      "different",
      "inputs",
      "keygen",
      "to_vec",
      "elapsed",
      "Ok",
      "Err",
      "error_information_leakage",
      "encapsulate",
      "side_channel_resistance",
      "memory_safety",
      "push",
      "as_nanos",
      "key_determinism_vulnerability",
      "unwrap",
      "encapsulation_decapsulation_consistency",
      "as_ref",
      "input",
      "decapsulate",
      "now",
      "timing_attack_resistance",
      "collect",
      "let",
      "ones",
      "entropy",
      "from_entropy",
      "bits_to_bytes",
      "key_serialization",
      "encryption_decryption",
      "error_recovery",
      "polynomial_operations",
      "new",
      "from_bytes",
      "encrypt",
      "generate_keypair",
      "keygen",
      "hqc256_compatibility",
      "constant_time_properties",
      "Err",
      "GF",
      "poly_mult_add",
      "different_security_levels",
      "len",
      "key_generation",
      "poly_mult_sub",
      "unwrap",
      "bytes_to_bits",
      "parameters",
      "invalid_message_length",
      "bytes",
      "security_properties",
      "zero_message",
      "bit_operations",
      "let",
      "decrypt",
      "as_bytes",
      "ml_kem_768",
      "len",
      "keygen",
      "ct_eq",
      "decapsulate",
      "ciphertext_size",
      "encapsulate",
      "key_sizes",
      "shared_secret_size",
      "let",
      "unwrap",
      "from",
      "as_ref",
      "as_mut_slice",
      "len",
      "stats",
      "drop",
      "as_slice",
      "new",
      "buffer_pool_size_categories",
      "buffer_pool_stats",
      "acquire",
      "buffer_pool_basic",
      "optimized_encapsulation",
      "batch_processor",
      "len",
      "get_aggregated_metrics",
      "get_metrics",
      "let",
      "metrics_tracking",
      "keygen_optimized",
      "cache_warming",
      "as_bytes",
      "optimized_keygen",
      "for",
      "batch_keygen",
      "warm_cache",
      "new",
      "encapsulate_optimized",
      "unwrap",
      "batch_keygen_parallel",
      "is_none",
      "new",
      "from_bytes",
      "cache_stats",
      "from_millis",
      "get",
      "precomputed_context",
      "contains",
      "key_cache_basic",
      "key_hash",
      "is_some",
      "for_transport",
      "len",
      "stats",
      "unwrap",
      "cache_cleanup",
      "cleanup_expired",
      "from_nanos",
      "insert",
      "sleep",
      "for_ml_kem",
      "encrypt",
      "len",
      "keygen",
      "hqc_256_keygen",
      "let",
      "decrypt",
      "unwrap",
      "as_ref",
      "hqc_256_encrypt_decrypt",
      "sign",
      "generate_keypair",
      "len",
      "verify",
      "signature_roundtrip",
      "thread_rng",
      "memory_zeroization",
      "clone",
      "drop",
      "unwrap",
      "timing_consistency",
      "invalid_signature",
      "sign",
      "is_ok",
      "verify",
      "thread_rng",
      "basic_functionality",
      "public_key",
      "generate",
      "unwrap",
      "from_bytes"
    ],
    "coverage_stats": {
      "total_lines": 2551,
      "test_lines": 4889,
      "covered_lines": 566,
      "coverage_percentage": 22.18737749901999,
      "uncovered_functions": [
        "reset_metrics",
        "generate_sparse_vector",
        "test_basic_functionality",
        "generate_uniform_poly",
        "polynomial_multiply_add",
        "deref_mut",
        "as_mut",
        "secret_key_len",
        "pack_t1",
        "clear",
        "test_buffer_pool_stats",
        "generate_matrix_a",
        "test_buffer_pool_size_categories",
        "capacity",
        "encapsulate_with_cache",
        "test_ml_kem_768",
        "get_latency_percentile",
        "unpack_t1",
        "record_cache_hit",
        "acquire_large",
        "decompose_t",
        "pack_secret_key",
        "test_error_recovery",
        "encode_message",
        "record_cache_miss",
        "test_key_generation",
        "ciphertext_len",
        "default",
        "test_cache_warming",
        "test_signature_roundtrip",
        "test_precomputed_context",
        "ct_select",
        "verify_signature_internal",
        "test_constant_time_properties",
        "generate_secret_vectors",
        "test_buffer_pool_basic",
        "unpack_z",
        "record_key_op",
        "return_buffer",
        "calculate_hit_rate",
        "decapsulate_optimized",
        "test_metrics_tracking",
        "eq",
        "secure_zero",
        "test_zero_message",
        "pack_t0",
        "deref",
        "test_invalid_signature",
        "test_parameters",
        "test_polynomial_operations",
        "test_encryption_decryption",
        "test_hqc_256_keygen",
        "test_different_security_levels",
        "get_summary",
        "signature",
        "public_key_len",
        "test_cache_cleanup",
        "record_encryption",
        "generate_random_vector",
        "encapsulate_standard",
        "update",
        "resize",
        "test_security_properties",
        "test_hqc_256_encrypt_decrypt",
        "test_invalid_message_length",
        "sign_message_internal",
        "matrix_vector_multiply",
        "test_bit_operations",
        "test_batch_keygen",
        "get_next_instance",
        "acquire_medium",
        "test_timing_consistency",
        "pack_eta_poly",
        "test_cache_stats",
        "test_key_hash",
        "pack_public_key",
        "record_decryption",
        "test_optimized_encapsulation",
        "fmt",
        "test_shared_secret_size",
        "test_ciphertext_size",
        "test_key_cache_basic",
        "test_optimized_keygen",
        "generate_eta_poly",
        "decode_message",
        "test_key_sizes",
        "test_batch_processor",
        "test_hqc256_compatibility",
        "into_bytes",
        "record_latency",
        "finalize",
        "acquire_small",
        "parse_signature",
        "test_memory_zeroization",
        "test_key_serialization",
        "decompose_coefficient"
      ],
      "uncovered_modules": []
    }
  },
  "dag": {
    "module_name": "dag",
    "source_files": [
      "/workspaces/QuDAG/core/dag/src/consensus.rs",
      "/workspaces/QuDAG/core/dag/src/vertex.rs",
      "/workspaces/QuDAG/core/dag/src/edge.rs",
      "/workspaces/QuDAG/core/dag/src/node.rs",
      "/workspaces/QuDAG/core/dag/src/dag.rs",
      "/workspaces/QuDAG/core/dag/src/lib.rs",
      "/workspaces/QuDAG/core/dag/src/consensus_tests.rs",
      "/workspaces/QuDAG/core/dag/src/invariant_tests.rs",
      "/workspaces/QuDAG/core/dag/src/tip_selection.rs",
      "/workspaces/QuDAG/core/dag/src/error.rs",
      "/workspaces/QuDAG/core/dag/src/graph.rs"
    ],
    "test_files": [
      "/workspaces/QuDAG/core/dag/tests/liveness_tests.rs",
      "/workspaces/QuDAG/core/dag/tests/byzantine_tests.rs",
      "/workspaces/QuDAG/core/dag/tests/qr_avalanche_tests.rs",
      "/workspaces/QuDAG/core/dag/tests/integration_qr_avalanche.rs",
      "/workspaces/QuDAG/core/dag/tests/safety_tests.rs",
      "/workspaces/QuDAG/core/dag/tests/consensus_performance_tests.rs",
      "/workspaces/QuDAG/core/dag/tests/concurrent_consensus_tests.rs",
      "/workspaces/QuDAG/core/dag/tests/network_conditions_tests.rs",
      "/workspaces/QuDAG/core/dag/tests/network_sim.rs",
      "/workspaces/QuDAG/core/dag/src/edge.rs",
      "/workspaces/QuDAG/core/dag/src/node.rs",
      "/workspaces/QuDAG/core/dag/src/dag.rs",
      "/workspaces/QuDAG/core/dag/src/lib.rs",
      "/workspaces/QuDAG/core/dag/src/consensus_tests.rs",
      "/workspaces/QuDAG/core/dag/src/invariant_tests.rs",
      "/workspaces/QuDAG/core/dag/src/graph.rs"
    ],
    "functions": [
      "get_tips",
      "vertices_conflict",
      "new",
      "advanced_fork_resolution",
      "finalize_vertex",
      "simulate_participant_vote",
      "check_byzantine_tolerance",
      "query_sample",
      "record_vertex_processed",
      "record_fork_resolved",
      "record_vote",
      "is_consensus_reached",
      "prune",
      "resolve_conflict_set",
      "sync",
      "run_consensus_round",
      "has_conflicting_vote_pattern",
      "fast_finality",
      "add_participant",
      "get_metrics",
      "detect_byzantine_patterns",
      "record_byzantine_behavior",
      "detect_and_resolve_forks",
      "record_finality",
      "high_security",
      "get_vote_counts",
      "with_config",
      "process_vertex",
      "detect_fork_conflicts",
      "run_fast_consensus_round",
      "default",
      "init",
      "get_confidence",
      "update_votes",
      "create",
      "parents",
      "is_tip",
      "score",
      "as_bytes",
      "validate",
      "new",
      "from_bytes",
      "increment_weight",
      "test_edge_weight",
      "weight",
      "test_edge_creation",
      "new",
      "from",
      "to",
      "parents",
      "state",
      "from",
      "test_node_creation",
      "payload",
      "test_invalid_state_transitions",
      "new",
      "hash",
      "test_valid_state_transitions",
      "update_state",
      "sync_state",
      "process_message",
      "submit_message",
      "test_conflict_detection",
      "test_state_sync",
      "detect_conflicts",
      "new",
      "test_parallel_message_processing",
      "add_message",
      "contains_message",
      "with_config",
      "get_tips",
      "verify_message",
      "default",
      "get_total_order",
      "new",
      "get_confidence",
      "add_vertex",
      "test_parallel_branches",
      "test_missing_parent_validation",
      "test_consensus_basic_operations",
      "test_consensus_config_validation",
      "test_self_reference_prevention",
      "test_consensus_status_transitions",
      "test_dag_invariants",
      "test_total_order_consistency",
      "create_test_vertex",
      "test_fork_detection",
      "test_dag_consensus_genesis_vertex",
      "test_dag_consensus_chain_building",
      "test_byzantine_resistance",
      "prop_dag_byzantine_resistance",
      "test_partial_order_preservation",
      "test_consensus_stability_invariant",
      "test_edge_cases",
      "prop_dag_liveness_properties",
      "test_tip_set_invariant",
      "test_concurrent_safety",
      "prop_dag_consensus_monotonicity",
      "prop_dag_safety_under_concurrency",
      "create_test_vertex",
      "prop_dag_tip_set_invariants",
      "prop_dag_maintains_invariants",
      "prop_dag_acyclicity",
      "test_dag_acyclicity_invariant",
      "weighted_random_selection",
      "calculate_cumulative_weight",
      "calculate_cumulative_weight_recursive",
      "update_vertex_weight",
      "random_selection",
      "calculate_confidence",
      "mcmc_walk",
      "default",
      "select_tips",
      "init",
      "update_tips",
      "new",
      "is_valid_tip",
      "add_vertex",
      "get_node",
      "update_node_state",
      "add_node",
      "is_empty",
      "test_cycle_prevention",
      "test_graph_basic_operations",
      "memory_usage",
      "new",
      "metrics",
      "with_capacity",
      "test_node_state_updates",
      "get",
      "would_create_cycle",
      "test_missing_parent",
      "prune",
      "len",
      "prune_old_vertices",
      "cache_hit_rate",
      "get_edges",
      "with_config",
      "default",
      "insert"
    ],
    "tested_functions": [
      "no_deadlock",
      "progress",
      "termination",
      "concurrent_progress",
      "from_secs",
      "Err",
      "fork_detection",
      "fork",
      "equivocation_resistance",
      "sybil_resistance",
      "byzantine_agreement",
      "new",
      "create_test_vertex",
      "unwrap",
      "ForkDetected",
      "from_secs",
      "add_vertex",
      "default",
      "total_order",
      "ValidationError",
      "is_ok",
      "validity",
      "agreement",
      "InvalidVertex",
      "Err",
      "get_total_order",
      "new",
      "create_test_vertex",
      "unwrap",
      "from_secs",
      "add_vertex",
      "map",
      "add_node",
      "block_on",
      "dag_parallel_operations",
      "new",
      "unwrap",
      "hash",
      "increment_weight",
      "weight",
      "from",
      "edge_creation",
      "edge_weight",
      "new",
      "hash",
      "to",
      "parents",
      "is_ok",
      "state",
      "valid_state_transitions",
      "invalid_state_transitions",
      "is_err",
      "clone",
      "payload",
      "new",
      "node_creation",
      "hash",
      "update_state",
      "self_reference_prevention",
      "is_empty",
      "parallel_branches",
      "consensus_status_transitions",
      "new",
      "consensus_config_validation",
      "get",
      "Some",
      "contains",
      "contains_key",
      "dag_consensus_chain_building",
      "fork_detection",
      "for",
      "total_order_consistency",
      "dag_consensus_genesis_vertex",
      "create_test_vertex",
      "from_secs",
      "add_vertex",
      "is_ok",
      "missing_parent_validation",
      "is_err",
      "clone",
      "unwrap",
      "ID",
      "unwrap_err",
      "process_vertex",
      "to_string",
      "dag_invariants",
      "consensus_basic_operations",
      "get_confidence",
      "enumerate",
      "is_empty",
      "concurrent_safety",
      "get_tips",
      "repeat",
      "get_total_order",
      "new",
      "iter",
      "Some",
      "contains",
      "for",
      "create_test_vertex",
      "add_vertex",
      "is_ok",
      "len",
      "edge_cases",
      "is_err",
      "push",
      "tip_set_invariant",
      "unwrap",
      "dag_acyclicity_invariant",
      "position",
      "consensus_stability_invariant",
      "byzantine_resistance",
      "to_string",
      "partial_order_preservation",
      "get_confidence",
      "get_node",
      "update_node_state",
      "add_node",
      "is_empty",
      "MissingParent",
      "cycle_prevention",
      "new",
      "iter",
      "node_state_updates",
      "state",
      "Err",
      "hash",
      "any",
      "graph_basic_operations",
      "len",
      "is_ok",
      "is_err",
      "missing_parent",
      "unwrap",
      "to",
      "get_edges"
    ],
    "coverage_stats": {
      "total_lines": 2353,
      "test_lines": 3277,
      "covered_lines": 403,
      "coverage_percentage": 17.12707182320442,
      "uncovered_functions": [
        "test_node_state_updates",
        "sync",
        "test_edge_creation",
        "add_message",
        "fast_finality",
        "detect_and_resolve_forks",
        "prune_old_vertices",
        "test_dag_acyclicity_invariant",
        "test_parallel_branches",
        "contains_message",
        "run_fast_consensus_round",
        "test_graph_basic_operations",
        "advanced_fork_resolution",
        "test_valid_state_transitions",
        "test_dag_consensus_genesis_vertex",
        "is_valid_tip",
        "weighted_random_selection",
        "simulate_participant_vote",
        "test_conflict_detection",
        "update_vertex_weight",
        "check_byzantine_tolerance",
        "is_tip",
        "test_self_reference_prevention",
        "prune",
        "run_consensus_round",
        "calculate_cumulative_weight",
        "has_conflicting_vote_pattern",
        "get_metrics",
        "random_selection",
        "prop_dag_consensus_monotonicity",
        "detect_fork_conflicts",
        "test_dag_invariants",
        "test_invalid_state_transitions",
        "prop_dag_maintains_invariants",
        "prop_dag_acyclicity",
        "test_consensus_status_transitions",
        "test_consensus_config_validation",
        "memory_usage",
        "detect_conflicts",
        "from_bytes",
        "metrics",
        "with_capacity",
        "sync_state",
        "test_edge_weight",
        "would_create_cycle",
        "test_partial_order_preservation",
        "query_sample",
        "test_missing_parent_validation",
        "test_consensus_stability_invariant",
        "prop_dag_liveness_properties",
        "is_consensus_reached",
        "record_vote",
        "calculate_confidence",
        "test_fork_detection",
        "process_message",
        "add_participant",
        "detect_byzantine_patterns",
        "record_finality",
        "prop_dag_safety_under_concurrency",
        "prop_dag_tip_set_invariants",
        "cache_hit_rate",
        "get_vote_counts",
        "test_edge_cases",
        "test_tip_set_invariant",
        "verify_message",
        "mcmc_walk",
        "init",
        "select_tips",
        "insert",
        "as_bytes",
        "test_dag_consensus_chain_building",
        "test_cycle_prevention",
        "test_concurrent_safety",
        "vertices_conflict",
        "finalize_vertex",
        "test_missing_parent",
        "record_vertex_processed",
        "record_fork_resolved",
        "test_node_creation",
        "resolve_conflict_set",
        "test_parallel_message_processing",
        "create",
        "prop_dag_byzantine_resistance",
        "submit_message",
        "test_consensus_basic_operations",
        "validate",
        "record_byzantine_behavior",
        "test_total_order_consistency",
        "high_security",
        "test_byzantine_resistance",
        "calculate_cumulative_weight_recursive",
        "test_state_sync",
        "with_config",
        "score",
        "update_tips",
        "update_votes"
      ],
      "uncovered_modules": []
    }
  },
  "network": {
    "module_name": "network",
    "source_files": [
      "/workspaces/QuDAG/core/network/src/onion.rs",
      "/workspaces/QuDAG/core/network/src/shadow_address.rs",
      "/workspaces/QuDAG/core/network/src/types.rs",
      "/workspaces/QuDAG/core/network/src/discovery.rs",
      "/workspaces/QuDAG/core/network/src/metrics.rs",
      "/workspaces/QuDAG/core/network/src/peer.rs",
      "/workspaces/QuDAG/core/network/src/dns.rs",
      "/workspaces/QuDAG/core/network/src/message.rs",
      "/workspaces/QuDAG/core/network/src/router.rs",
      "/workspaces/QuDAG/core/network/src/connection.rs",
      "/workspaces/QuDAG/core/network/src/lib.rs",
      "/workspaces/QuDAG/core/network/src/transport.rs",
      "/workspaces/QuDAG/core/network/src/dark_resolver.rs",
      "/workspaces/QuDAG/core/network/src/routing.rs",
      "/workspaces/QuDAG/core/network/src/p2p.rs"
    ],
    "test_files": [
      "/workspaces/QuDAG/core/network/tests/integration_tests.rs",
      "/workspaces/QuDAG/core/network/tests/resilience_tests.rs",
      "/workspaces/QuDAG/core/network/tests/onion_tests.rs",
      "/workspaces/QuDAG/core/network/tests/error_handling_tests.rs",
      "/workspaces/QuDAG/core/network/tests/message_handling.rs",
      "/workspaces/QuDAG/core/network/tests/router_tests.rs",
      "/workspaces/QuDAG/core/network/tests/security_tests.rs",
      "/workspaces/QuDAG/core/network/tests/edge_case_tests.rs",
      "/workspaces/QuDAG/core/network/tests/concurrent_tests.rs",
      "/workspaces/QuDAG/core/network/tests/message_tests.rs",
      "/workspaces/QuDAG/core/network/tests/security/timing_analysis_tests.rs",
      "/workspaces/QuDAG/core/network/tests/security/anonymity_tests.rs",
      "/workspaces/QuDAG/core/network/src/shadow_address.rs",
      "/workspaces/QuDAG/core/network/src/dns.rs",
      "/workspaces/QuDAG/core/network/src/message.rs",
      "/workspaces/QuDAG/core/network/src/router.rs",
      "/workspaces/QuDAG/core/network/src/connection.rs",
      "/workspaces/QuDAG/core/network/src/dark_resolver.rs",
      "/workspaces/QuDAG/core/network/src/routing.rs",
      "/workspaces/QuDAG/core/network/src/p2p.rs"
    ],
    "functions": [
      "should_flush",
      "obfuscate_timestamp",
      "total_size",
      "with_layer_size",
      "scrub_packet_headers",
      "generate_anonymous_ids",
      "new",
      "add_dummy_messages",
      "get_stats",
      "generate_padding",
      "protect_metadata",
      "add_timing_obfuscation",
      "apply_shaping",
      "apply_resistance",
      "apply_burst_obfuscation",
      "generate_dummy",
      "add_message",
      "decrypt_layer",
      "apply_flow_correlation_resistance",
      "validate",
      "normalize_message_size",
      "anonymize_ip",
      "generate_random_headers",
      "flush_batch",
      "decrypt_aead",
      "apply_timing_obfuscation",
      "with_config",
      "apply_pattern_mimicking",
      "select_random_pattern",
      "get_dummy_ratio",
      "default",
      "create_metadata",
      "normalize_packet_size",
      "encrypt_layers",
      "normalize_size",
      "generate_symmetric_key",
      "encrypt_aead",
      "derive_address",
      "new",
      "test_address_resolution",
      "arb_shadow_metadata",
      "test_address_validation",
      "generate_address",
      "validate_address",
      "test_shadow_address_serialize",
      "create_test_address",
      "test_address_check",
      "generate_seed",
      "arb_shadow_address",
      "check_address",
      "test_shadow_address_display",
      "test_address_generation",
      "test_address_derivation",
      "resolve_address",
      "arb_network_type",
      "fmt",
      "derive_keys",
      "to_socket_addr",
      "to_bytes",
      "as_bytes",
      "from_ip_port",
      "new",
      "from_bytes",
      "random",
      "announce",
      "discover_peers",
      "stop_discovery",
      "init",
      "get_known_peers",
      "start_discovery",
      "record_throughput",
      "record_completion",
      "record_latency",
      "record_message",
      "record_cache_hit",
      "get_summary",
      "record_connection",
      "get_percentile",
      "ban_peer",
      "get_peer",
      "get_peers",
      "is_banned",
      "add_peer",
      "remove_peer",
      "list_records",
      "test_record_validation",
      "test_update_record",
      "delete_record",
      "update_record",
      "validate_record",
      "create_test_record",
      "test_create_record",
      "test_list_records",
      "test_delete_record",
      "new",
      "create_record",
      "setup_test_config",
      "verify_signature",
      "sign",
      "len",
      "test_message_queue",
      "verify",
      "enqueue",
      "purge_expired",
      "new",
      "dequeue",
      "update_hop_knowledge",
      "knows_peer",
      "test_add_peer",
      "test_router_creation",
      "test_anonymous_routing",
      "default",
      "route",
      "route_anonymous",
      "new",
      "get_hop_info",
      "can_decrypt_layer",
      "add_peer",
      "receive",
      "connection_count",
      "get_latency_metrics",
      "get_queue_metrics",
      "new",
      "bench_connection_pooling",
      "get_throughput_metrics",
      "bench_route_computation",
      "update_metrics",
      "test_secure_connection",
      "connect",
      "test_connection_management",
      "generate",
      "bench_message_throughput",
      "auto_recover",
      "bench_cache_efficiency",
      "recover_connection",
      "get_metrics",
      "send",
      "with_pool_timeout",
      "update_status",
      "setup_test_config",
      "bench_circuit_setup",
      "cleanup_pool",
      "health_check",
      "flush_batch",
      "disconnect",
      "get_status",
      "new",
      "close",
      "connect",
      "init",
      "get_connections",
      "accept",
      "decrypt_address",
      "is_valid_dark_domain",
      "lookup_domain",
      "register_domain",
      "test_valid_dark_domains",
      "resolve_address",
      "new",
      "test_domain_registration_and_resolution",
      "find_shadow_paths",
      "create_test_shadow_address",
      "update_path_metrics",
      "route_message",
      "add_peer_connection",
      "test_route_shadow_message",
      "test_find_paths",
      "test_add_remove_peer",
      "resolve_address",
      "find_paths",
      "remove_peer_connection",
      "check_address",
      "setup_test_router",
      "dfs",
      "new",
      "test_route_message",
      "set_shadow_resolver",
      "from",
      "test_peer_connections",
      "peer_id",
      "deobfuscate_traffic",
      "test_node_creation",
      "handle_outgoing_message",
      "test_traffic_obfuscation",
      "start",
      "default",
      "test_node_listening",
      "new",
      "obfuscate_traffic"
    ],
    "tested_functions": [
      "is_ok",
      "onion_layer_creation",
      "Err",
      "onion_router_creation",
      "InvalidFormat",
      "validate",
      "new",
      "onion_layer_validation",
      "map",
      "update_network",
      "is_ok",
      "len",
      "is_empty",
      "last",
      "router_config",
      "select_path",
      "default",
      "clone",
      "network_updates",
      "insert",
      "collect",
      "path_validation",
      "new",
      "unwrap",
      "path_selection",
      "message_validation",
      "is_ok",
      "Err",
      "InvalidFormat",
      "validate",
      "new",
      "message_creation",
      "from_str",
      "derive_address",
      "is_empty",
      "address_validation",
      "new",
      "shadow_address_serialize",
      "address_check",
      "address_derivation",
      "generate_address",
      "len",
      "address_resolution",
      "validate_address",
      "shadow_address_display",
      "create_test_address",
      "check_address",
      "unwrap",
      "resolve_address",
      "to_string",
      "address_generation",
      "record_validation",
      "is_ok",
      "is_err",
      "create_test_record",
      "validate_record",
      "clone",
      "to_string",
      "new",
      "setup_test_config",
      "valid_dark_domains",
      "is_valid_dark_domain",
      "is_ok",
      "lookup_domain",
      "again",
      "register_domain",
      "Err",
      "is_err",
      "clone",
      "resolve_address",
      "domain_registration_and_resolution",
      "new",
      "unwrap",
      "get",
      "add_peer_connection",
      "contains",
      "contains_key",
      "is_empty",
      "setup_test_router",
      "remove_peer_connection",
      "find_paths",
      "let",
      "unwrap",
      "random",
      "add_remove_peer"
    ],
    "coverage_stats": {
      "total_lines": 3074,
      "test_lines": 5090,
      "covered_lines": 341,
      "coverage_percentage": 11.093038386467144,
      "uncovered_functions": [
        "verify_signature",
        "total_size",
        "test_route_shadow_message",
        "record_connection",
        "test_delete_record",
        "dfs",
        "get_queue_metrics",
        "get_latency_metrics",
        "get_known_peers",
        "obfuscate_traffic",
        "bench_connection_pooling",
        "get_throughput_metrics",
        "ban_peer",
        "get_stats",
        "test_record_validation",
        "bench_route_computation",
        "enqueue",
        "update_metrics",
        "test_secure_connection",
        "deobfuscate_traffic",
        "is_banned",
        "update_record",
        "connect",
        "route",
        "can_decrypt_layer",
        "remove_peer",
        "generate_dummy",
        "auto_recover",
        "close",
        "record_cache_hit",
        "add_message",
        "test_router_creation",
        "test_shadow_address_serialize",
        "delete_record",
        "start",
        "test_shadow_address_display",
        "start_discovery",
        "anonymize_ip",
        "list_records",
        "generate_random_headers",
        "apply_timing_obfuscation",
        "decrypt_aead",
        "test_address_derivation",
        "test_traffic_obfuscation",
        "normalize_size",
        "encrypt_aead",
        "should_flush",
        "obfuscate_timestamp",
        "knows_peer",
        "generate_anonymous_ids",
        "test_node_listening",
        "dequeue",
        "from",
        "accept",
        "test_address_resolution",
        "test_peer_connections",
        "verify",
        "update_path_metrics",
        "test_route_message",
        "apply_burst_obfuscation",
        "update_hop_knowledge",
        "record_completion",
        "bench_cache_efficiency",
        "test_add_peer",
        "decrypt_layer",
        "get_metrics",
        "send",
        "get_peers",
        "test_address_check",
        "test_create_record",
        "create_record",
        "update_status",
        "get_summary",
        "flush_batch",
        "select_random_pattern",
        "test_valid_dark_domains",
        "test_list_records",
        "encrypt_layers",
        "receive",
        "connection_count",
        "with_layer_size",
        "get_percentile",
        "from_bytes",
        "purge_expired",
        "add_dummy_messages",
        "sign",
        "announce",
        "arb_shadow_metadata",
        "test_anonymous_routing",
        "protect_metadata",
        "add_timing_obfuscation",
        "discover_peers",
        "apply_shaping",
        "test_connection_management",
        "apply_resistance",
        "bench_message_throughput",
        "to_socket_addr",
        "get_peer",
        "test_update_record",
        "test_find_paths",
        "generate_seed",
        "arb_shadow_address",
        "test_domain_registration_and_resolution",
        "test_address_generation",
        "bench_circuit_setup",
        "record_throughput",
        "apply_pattern_mimicking",
        "disconnect",
        "create_metadata",
        "init",
        "as_bytes",
        "fmt",
        "derive_keys",
        "add_peer",
        "test_add_remove_peer",
        "scrub_packet_headers",
        "stop_discovery",
        "peer_id",
        "to_bytes",
        "decrypt_address",
        "record_message",
        "generate_padding",
        "route_message",
        "test_node_creation",
        "test_address_validation",
        "generate",
        "test_message_queue",
        "get_connections",
        "find_shadow_paths",
        "recover_connection",
        "record_latency",
        "apply_flow_correlation_resistance",
        "create_test_shadow_address",
        "handle_outgoing_message",
        "normalize_message_size",
        "route_anonymous",
        "from_ip_port",
        "set_shadow_resolver",
        "get_hop_info",
        "with_pool_timeout",
        "cleanup_pool",
        "health_check",
        "with_config",
        "get_dummy_ratio",
        "get_status",
        "normalize_packet_size",
        "arb_network_type",
        "generate_symmetric_key"
      ],
      "uncovered_modules": []
    }
  },
  "protocol": {
    "module_name": "protocol",
    "source_files": [
      "/workspaces/QuDAG/core/protocol/src/coordinator.rs",
      "/workspaces/QuDAG/core/protocol/src/state.rs",
      "/workspaces/QuDAG/core/protocol/src/validation.rs",
      "/workspaces/QuDAG/core/protocol/src/types.rs",
      "/workspaces/QuDAG/core/protocol/src/transaction.rs",
      "/workspaces/QuDAG/core/protocol/src/instrumentation.rs",
      "/workspaces/QuDAG/core/protocol/src/metrics.rs",
      "/workspaces/QuDAG/core/protocol/src/node.rs",
      "/workspaces/QuDAG/core/protocol/src/message.rs",
      "/workspaces/QuDAG/core/protocol/src/config.rs",
      "/workspaces/QuDAG/core/protocol/src/lib.rs",
      "/workspaces/QuDAG/core/protocol/src/synchronization.rs",
      "/workspaces/QuDAG/core/protocol/src/handshake.rs",
      "/workspaces/QuDAG/core/protocol/src/routing.rs",
      "/workspaces/QuDAG/core/protocol/src/allocator.rs"
    ],
    "test_files": [
      "/workspaces/QuDAG/core/protocol/tests/protocol_tests.rs",
      "/workspaces/QuDAG/core/protocol/tests/integration/protocol_e2e_tests.rs",
      "/workspaces/QuDAG/core/protocol/tests/integration/concurrent_operation_tests.rs",
      "/workspaces/QuDAG/core/protocol/tests/integration/security_integration_tests.rs",
      "/workspaces/QuDAG/core/protocol/tests/integration/cli_integration_tests.rs",
      "/workspaces/QuDAG/core/protocol/tests/integration/network_partition_tests.rs",
      "/workspaces/QuDAG/core/protocol/tests/integration/error_propagation_tests.rs",
      "/workspaces/QuDAG/core/protocol/tests/security/comprehensive_security_tests.rs",
      "/workspaces/QuDAG/core/protocol/tests/security/protocol_verification.rs",
      "/workspaces/QuDAG/core/protocol/src/coordinator.rs",
      "/workspaces/QuDAG/core/protocol/src/transaction.rs",
      "/workspaces/QuDAG/core/protocol/src/instrumentation.rs",
      "/workspaces/QuDAG/core/protocol/src/node.rs",
      "/workspaces/QuDAG/core/protocol/src/routing.rs",
      "/workspaces/QuDAG/core/protocol/src/allocator.rs"
    ],
    "functions": [
      "network_manager",
      "init_crypto",
      "init_dag",
      "state",
      "broadcast_message",
      "test_coordinator_initialization",
      "stop",
      "is_initialized",
      "dag_manager",
      "test_coordinator_lifecycle",
      "start",
      "crypto_manager",
      "default",
      "init_network",
      "new",
      "current_state",
      "get_session",
      "get_state_history",
      "transition",
      "on_state_entry",
      "uptime",
      "remove_session",
      "create_session",
      "new",
      "validate_transition",
      "is_valid_transition",
      "process_handshake_message",
      "update_session_state",
      "cleanup_timed_out_sessions",
      "transition_to",
      "process_message",
      "get_metrics",
      "protocol_version",
      "handle_error_state",
      "begin_shutdown",
      "get_sessions",
      "is_healthy",
      "active_sessions",
      "cleanup_resources",
      "with_config",
      "get_state",
      "default",
      "cleanup_failed_sessions",
      "init",
      "validate_message",
      "validate_signature",
      "check_freshness",
      "init",
      "validate_version",
      "verify_signature",
      "spend_utxo",
      "test_transaction_signing",
      "new",
      "get_utxo_set",
      "sign",
      "test_transaction_hash",
      "test_transaction_processor",
      "get_balance",
      "test_utxo_set",
      "get_pending_transactions",
      "get_utxos_for_address",
      "hash",
      "get_utxo",
      "add_utxo",
      "is_spent",
      "total_input_amount",
      "process_transaction",
      "validate",
      "add_transaction",
      "test_transaction_creation",
      "default",
      "total_output_amount",
      "get_metrics",
      "track_allocation",
      "allocation_rate",
      "churn_rate",
      "track_deallocation",
      "test_memory_tracking",
      "new",
      "deallocation_rate",
      "record_message",
      "get_summary",
      "record_crypto_op",
      "record_consensus",
      "update_resources",
      "maybe_flush_metrics",
      "new",
      "handle_handshake",
      "handle_sync",
      "init_consensus",
      "handle_message",
      "stop",
      "init_keys",
      "init_transport",
      "start",
      "default",
      "test_node_lifecycle",
      "new",
      "handle_data",
      "handle_control",
      "sign",
      "encrypt",
      "create_ping",
      "is_expired",
      "new_with_version",
      "with_sequence",
      "get_signable_data",
      "new",
      "verify",
      "create_handshake_init",
      "with_ttl",
      "create_vertex_proposal",
      "validate",
      "is_compatible",
      "decrypt",
      "from_bytes",
      "to_bytes",
      "with_header",
      "save_to_toml",
      "load_from_file",
      "save_to_file",
      "validate",
      "default",
      "apply_env_overrides",
      "load_from_toml",
      "send_state",
      "init",
      "start_sync",
      "request_state",
      "stop_sync",
      "resolve_conflicts",
      "validate_timestamp",
      "get_shared_secrets",
      "verify_capabilities",
      "is_handshake_completed",
      "process_handshake_complete",
      "generate_keys",
      "get_session",
      "negotiate_version",
      "derive_session_keys",
      "get_active_sessions",
      "initiate_handshake",
      "cleanup_sessions",
      "default",
      "process_handshake_init",
      "process_handshake_response",
      "process_version_negotiation",
      "new",
      "process_handshake_message",
      "update_peer_metrics",
      "is_alive",
      "test_route_finding",
      "new",
      "test_peer_info_creation",
      "get_stats",
      "test_shortest_path_finding",
      "calculate_quality",
      "update_metrics",
      "route_message",
      "add_peer",
      "create_onion_header",
      "get_connections",
      "process_onion_layer",
      "remove_peer",
      "get_peer",
      "routing_score",
      "create_test_peer",
      "is_valid",
      "clone",
      "cleanup",
      "add_connection",
      "test_peer_table_operations",
      "find_multiple_paths",
      "get_all_peers",
      "find_shortest_path",
      "default",
      "test_routing_path_creation",
      "cleanup_dead_peers",
      "test_message_router_creation",
      "find_route",
      "dealloc",
      "alloc",
      "get_memory_usage",
      "get_total_allocated",
      "deallocated_bytes",
      "test_memory_tracking",
      "allocated_bytes",
      "current_usage",
      "new",
      "get_total_deallocated"
    ],
    "tested_functions": [
      "is_ok",
      "broadcast_message",
      "protocol_with_random_messages",
      "block_on",
      "start",
      "default",
      "new",
      "unwrap",
      "enumerate",
      "hash_function",
      "repeat",
      "key_size",
      "calculate_consensus",
      "message_validation_bypass_attempts",
      "new",
      "iter",
      "set_timestamp",
      "to_vec",
      "contains",
      "elapsed",
      "get_memory_usage",
      "for",
      "signature_scheme",
      "denial_of_service_resistance",
      "get_config",
      "protocol_state_integrity",
      "configuration_injection_attacks",
      "memory_exhaustion_prevention",
      "process_message",
      "side_channel_information_disclosure",
      "is_ok",
      "is_err",
      "push",
      "clone",
      "builder",
      "height",
      "unwrap",
      "cryptographic_downgrade_prevention",
      "replay_attack_prevention",
      "consensus_manipulation_resistance",
      "get_state",
      "build",
      "default",
      "now",
      "id",
      "try_new",
      "all_nodes_validated",
      "submit_message",
      "message_ordering_integrity",
      "sybil_resistance_score",
      "consensus_byzantine_resistance",
      "run_rounds",
      "agreement_reached",
      "is_valid",
      "sybil_resistance",
      "generate_test_messages",
      "new",
      "set_byzantine_nodes",
      "shuffle_messages",
      "execute",
      "new",
      "utxo_set",
      "transaction_creation",
      "transaction_hash",
      "track_allocation",
      "get_metrics",
      "allocation_rate",
      "churn_rate",
      "track_deallocation",
      "sleep",
      "new",
      "memory_tracking",
      "from_secs",
      "deallocation_rate",
      "is_alive",
      "peer_info_creation",
      "new",
      "contains",
      "routing_path_creation",
      "get_connections",
      "from_secs",
      "is_some",
      "get_peer",
      "len",
      "create_test_peer",
      "clone",
      "unwrap",
      "add_connection",
      "shortest_path_finding",
      "get_all_peers",
      "find_shortest_path",
      "peer_table_operations",
      "add_peer",
      "get_total_allocated",
      "drop",
      "as_slice",
      "size_of_val",
      "memory_tracking",
      "get_total_deallocated"
    ],
    "coverage_stats": {
      "total_lines": 3230,
      "test_lines": 2843,
      "covered_lines": 425,
      "coverage_percentage": 13.157894736842104,
      "uncovered_functions": [
        "verify_signature",
        "dealloc",
        "get_signable_data",
        "get_session",
        "test_route_finding",
        "process_version_negotiation",
        "remove_session",
        "test_memory_tracking",
        "handle_control",
        "load_from_toml",
        "process_handshake_message",
        "get_shared_secrets",
        "get_stats",
        "network_manager",
        "state",
        "update_metrics",
        "cleanup_timed_out_sessions",
        "remove_peer",
        "validate_message",
        "is_spent",
        "handle_message",
        "process_handshake_init",
        "check_freshness",
        "get_sessions",
        "validate_version",
        "init_crypto",
        "new_with_version",
        "test_transaction_creation",
        "load_from_file",
        "test_routing_path_creation",
        "current_usage",
        "apply_env_overrides",
        "total_output_amount",
        "current_state",
        "get_state_history",
        "get_utxo_set",
        "test_peer_info_creation",
        "validate_timestamp",
        "init_dag",
        "verify",
        "calculate_quality",
        "test_transaction_processor",
        "create_vertex_proposal",
        "test_node_lifecycle",
        "create_onion_header",
        "maybe_flush_metrics",
        "allocated_bytes",
        "is_compatible",
        "request_state",
        "get_utxo",
        "process_onion_layer",
        "negotiate_version",
        "is_initialized",
        "begin_shutdown",
        "save_to_file",
        "test_coordinator_initialization",
        "save_to_toml",
        "get_summary",
        "is_expired",
        "with_sequence",
        "cleanup_resources",
        "find_multiple_paths",
        "handle_handshake",
        "handle_data",
        "find_route",
        "with_header",
        "update_peer_metrics",
        "handle_sync",
        "generate_keys",
        "spend_utxo",
        "init_consensus",
        "create_handshake_init",
        "transition",
        "with_ttl",
        "initiate_handshake",
        "test_transaction_signing",
        "on_state_entry",
        "uptime",
        "validate_transition",
        "from_bytes",
        "is_valid_transition",
        "start_sync",
        "sign",
        "test_shortest_path_finding",
        "test_transaction_hash",
        "get_balance",
        "init_transport",
        "test_coordinator_lifecycle",
        "hash",
        "transition_to",
        "add_utxo",
        "create_ping",
        "record_consensus",
        "handle_error_state",
        "derive_session_keys",
        "process_handshake_response",
        "is_healthy",
        "test_message_router_creation",
        "init",
        "decrypt",
        "send_state",
        "record_crypto_op",
        "stop",
        "get_active_sessions",
        "dag_manager",
        "update_resources",
        "create_session",
        "to_bytes",
        "encrypt",
        "verify_capabilities",
        "record_message",
        "route_message",
        "alloc",
        "validate_signature",
        "test_utxo_set",
        "cleanup_sessions",
        "crypto_manager",
        "get_pending_transactions",
        "get_utxos_for_address",
        "update_session_state",
        "resolve_conflicts",
        "is_handshake_completed",
        "routing_score",
        "total_input_amount",
        "protocol_version",
        "process_transaction",
        "validate",
        "add_transaction",
        "init_network",
        "cleanup",
        "process_handshake_complete",
        "active_sessions",
        "test_peer_table_operations",
        "with_config",
        "init_keys",
        "deallocated_bytes",
        "cleanup_failed_sessions",
        "cleanup_dead_peers",
        "stop_sync"
      ],
      "uncovered_modules": []
    }
  },
  "cli": {
    "module_name": "cli",
    "source_files": [
      "/workspaces/QuDAG/tools/cli/src/performance.rs",
      "/workspaces/QuDAG/tools/cli/src/async_optimizations.rs",
      "/workspaces/QuDAG/tools/cli/src/main.rs",
      "/workspaces/QuDAG/tools/cli/src/startup.rs",
      "/workspaces/QuDAG/tools/cli/src/commands.rs",
      "/workspaces/QuDAG/tools/cli/src/config.rs",
      "/workspaces/QuDAG/tools/cli/src/lib.rs",
      "/workspaces/QuDAG/tools/cli/src/output.rs",
      "/workspaces/QuDAG/tools/cli/src/rpc.rs"
    ],
    "test_files": [
      "/workspaces/QuDAG/tools/cli/tests/integration/cli_integration_test.rs",
      "/workspaces/QuDAG/tools/cli/tests/prop/cli_prop_test.rs",
      "/workspaces/QuDAG/tools/cli/tests/unit/args_test.rs",
      "/workspaces/QuDAG/tools/cli/src/performance.rs",
      "/workspaces/QuDAG/tools/cli/src/async_optimizations.rs",
      "/workspaces/QuDAG/tools/cli/src/startup.rs",
      "/workspaces/QuDAG/tools/cli/src/rpc.rs"
    ],
    "functions": [
      "start_command",
      "get_metrics",
      "complete",
      "batch_execute",
      "execute_with_retry",
      "get_memory_usage",
      "task_info",
      "mach_task_self",
      "clone",
      "generate_report",
      "default",
      "complete_with_error",
      "test_async_optimizer",
      "new",
      "record_error",
      "update_memory_usage",
      "test_performance_tracker",
      "record_command_completion",
      "execute_with_timeout",
      "flush_buffer",
      "test_retry_logic",
      "is_retryable",
      "new",
      "with_error_handler",
      "test_resource_limiter",
      "join_all",
      "execute_with_retry",
      "test_task_pool",
      "process_stream",
      "test_async_optimizer",
      "execute",
      "acquire_resources",
      "batch_execute",
      "release_resources",
      "default",
      "poll",
      "drop",
      "check_resources",
      "spawn",
      "shutdown",
      "main",
      "get_from_cache",
      "setup_logging",
      "execute_cached",
      "initialize",
      "cache_result",
      "pre_warm",
      "register_cleanup",
      "test_startup_optimizer",
      "optimize_clap_parser",
      "test_command_executor",
      "get_startup_time",
      "clear_cache",
      "new",
      "test_optimized_clap_parser",
      "initialize_resources",
      "optimize_runtime",
      "shutdown",
      "show_network_stats",
      "stop_node",
      "list_peers",
      "start_node",
      "show_status",
      "test_network",
      "visualize_dag",
      "add_peer",
      "remove_peer",
      "load",
      "default",
      "save",
      "new",
      "write",
      "create_wallet",
      "restart_node",
      "debug_network",
      "get_wallet_info",
      "with_timeout",
      "new",
      "get_network_stats",
      "stop_node",
      "debug_consensus",
      "test_rpc_request_serialization",
      "list_peers",
      "is_node_running",
      "security_audit",
      "test_network",
      "debug_performance",
      "get_config",
      "remove_peer",
      "import_wallet",
      "get_dag_data",
      "validate_config",
      "start_node",
      "wait_for_node_start",
      "test_rpc_response_serialization",
      "update_config",
      "get_status",
      "send_request",
      "export_wallet",
      "add_peer"
    ],
    "tested_functions": [
      "from_utf8_lossy",
      "network_stats_command",
      "exists",
      "new",
      "network_command_help",
      "network_test_command",
      "invalid_command",
      "read_to_string",
      "peer_list_command",
      "contains",
      "remove_file",
      "peer_command_help",
      "cli_help",
      "success",
      "expect",
      "status_command",
      "ok",
      "dag_visualization",
      "output",
      "start_command_help",
      "dag_command_help",
      "args",
      "try_parse_from",
      "invalid_combinations",
      "is_valid_toml_file",
      "is_ok",
      "valid_config_paths",
      "valid_peer_addresses",
      "is_err",
      "valid_log_levels",
      "valid_bind_address",
      "multiple_valid_combinations",
      "is_valid_log_level",
      "unwrap",
      "parse_peer_list_command",
      "parse_stop_command",
      "parse_start_command",
      "parse_status_command",
      "valid",
      "parse_peer_add_command",
      "parse_help_flag",
      "address_shadow_with_ttl",
      "try_parse_from",
      "is_ok",
      "parse_invalid_command",
      "is_err",
      "parse_network_stats_command",
      "unwrap",
      "parse_start_with_high_port",
      "parse_address_register_command",
      "address_fingerprint_with_data",
      "parse_start_with_options",
      "parse_start_with_port_zero",
      "parse_version_flag",
      "parse_start_with_invalid_port",
      "parse_peer_remove_command",
      "missing_required_argument",
      "optimize_clap_parser",
      "get_name",
      "optimized_clap_parser",
      "count",
      "get_subcommands",
      "Some",
      "rpc_request_serialization",
      "to_string",
      "new_v4",
      "rpc_response_serialization"
    ],
    "coverage_stats": {
      "total_lines": 1644,
      "test_lines": 1787,
      "covered_lines": 32,
      "coverage_percentage": 1.9464720194647203,
      "uncovered_functions": [
        "execute_with_timeout",
        "load",
        "restart_node",
        "main",
        "get_wallet_info",
        "test_retry_logic",
        "with_error_handler",
        "test_resource_limiter",
        "show_network_stats",
        "execute_with_retry",
        "complete",
        "remove_peer",
        "import_wallet",
        "validate_config",
        "generate_report",
        "save",
        "optimize_runtime",
        "test_command_executor",
        "get_startup_time",
        "default",
        "pre_warm",
        "with_timeout",
        "update_memory_usage",
        "test_optimized_clap_parser",
        "get_memory_usage",
        "record_error",
        "get_metrics",
        "get_dag_data",
        "wait_for_node_start",
        "visualize_dag",
        "get_from_cache",
        "acquire_resources",
        "release_resources",
        "start_command",
        "setup_logging",
        "clear_cache",
        "is_retryable",
        "get_network_stats",
        "debug_consensus",
        "test_rpc_request_serialization",
        "task_info",
        "show_status",
        "security_audit",
        "test_network",
        "test_task_pool",
        "complete_with_error",
        "write",
        "execute_cached",
        "poll",
        "spawn",
        "add_peer",
        "create_wallet",
        "cache_result",
        "flush_buffer",
        "test_startup_optimizer",
        "debug_network",
        "test_performance_tracker",
        "stop_node",
        "join_all",
        "initialize",
        "mach_task_self",
        "list_peers",
        "is_node_running",
        "debug_performance",
        "initialize_resources",
        "get_config",
        "record_command_completion",
        "register_cleanup",
        "start_node",
        "clone",
        "test_async_optimizer",
        "process_stream",
        "test_rpc_response_serialization",
        "update_config",
        "execute",
        "batch_execute",
        "get_status",
        "send_request",
        "drop",
        "export_wallet",
        "check_resources",
        "shutdown"
      ],
      "uncovered_modules": []
    }
  },
  "simulator": {
    "module_name": "simulator",
    "source_files": [
      "/workspaces/QuDAG/tools/simulator/src/attacks.rs",
      "/workspaces/QuDAG/tools/simulator/src/visualization.rs",
      "/workspaces/QuDAG/tools/simulator/src/metrics.rs",
      "/workspaces/QuDAG/tools/simulator/src/conditions.rs",
      "/workspaces/QuDAG/tools/simulator/src/scenarios.rs",
      "/workspaces/QuDAG/tools/simulator/src/lib.rs",
      "/workspaces/QuDAG/tools/simulator/src/network.rs",
      "/workspaces/QuDAG/tools/simulator/src/tests/integration_tests.rs",
      "/workspaces/QuDAG/tools/simulator/src/tests/scenarios_tests.rs",
      "/workspaces/QuDAG/tools/simulator/src/tests/network_tests.rs",
      "/workspaces/QuDAG/tools/simulator/src/tests/metrics_tests.rs",
      "/workspaces/QuDAG/tools/simulator/src/tests/property_tests.rs"
    ],
    "test_files": [
      "/workspaces/QuDAG/tools/simulator/src/attacks.rs",
      "/workspaces/QuDAG/tools/simulator/src/visualization.rs",
      "/workspaces/QuDAG/tools/simulator/src/conditions.rs",
      "/workspaces/QuDAG/tools/simulator/src/lib.rs",
      "/workspaces/QuDAG/tools/simulator/src/tests/scenarios_tests.rs",
      "/workspaces/QuDAG/tools/simulator/src/tests/metrics_tests.rs",
      "/workspaces/QuDAG/tools/simulator/src/tests/property_tests.rs"
    ],
    "functions": [
      "execute_sybil_attack",
      "add_nodes",
      "execute_eclipse_attack",
      "stop_attack",
      "new",
      "execute_byzantine_attack",
      "execute_dos_attack",
      "sybil_fake_voting",
      "test_attack_simulator_creation",
      "launch_attack",
      "execute_ddos_attack",
      "get_metrics",
      "test_add_nodes",
      "execute_routing_attack",
      "test_attack_metrics",
      "add_connection",
      "sybil_flooding",
      "sybil_partitioning",
      "test_sybil_attack",
      "default",
      "test_dos_attack",
      "get_active_attacks",
      "complete_attack",
      "visualize_throughput",
      "test_attack_visualization_creation",
      "generate_dashboard",
      "test_visualization_config_creation",
      "default",
      "visualize_latency_distribution",
      "generate_html_dashboard",
      "test_network_topology_creation",
      "new",
      "visualize_topology",
      "visualize_attack_timeline",
      "visualize_metrics_timeline",
      "new",
      "with_conditions",
      "calculate_latency",
      "get_stats",
      "transmit_message",
      "test_packet_loss",
      "should_drop_packet",
      "test_profile_serialization",
      "apply_bandwidth_limit",
      "update_conditions",
      "update_outage_state",
      "test_network_stats",
      "test_satellite_profile",
      "new",
      "conditions",
      "test_bandwidth_limiting",
      "test_lan_profile",
      "test_byzantine_tolerance",
      "test_network_partition",
      "test_basic_connectivity",
      "heal_partition",
      "add_node",
      "remove_node",
      "create_partition",
      "new",
      "test_simulation_edge_cases",
      "test_resource_management",
      "test_error_handling_and_recovery",
      "test_concurrent_simulations",
      "test_dynamic_network_conditions",
      "test_simulator_state_consistency",
      "test_interleaved_operations",
      "test_stress_conditions",
      "test_full_simulation_lifecycle",
      "test_network_partition_high_partition_probability",
      "test_basic_connectivity_single_node",
      "test_basic_connectivity_large_network",
      "test_byzantine_tolerance_minimum_nodes",
      "test_scenario_extreme_latency",
      "test_byzantine_tolerance_high_latency",
      "test_scenario_maximum_loss_rate",
      "test_scenario_config_clone",
      "test_scenario_config_edge_cases",
      "test_byzantine_tolerance_scenario",
      "test_basic_connectivity_scenario",
      "test_scenario_extreme_message_rate",
      "test_scenario_config_creation",
      "test_network_partition_scenario",
      "test_network_conditions_debug",
      "test_network_partition_small_network",
      "test_scenario_config_debug",
      "test_scenario_zero_nodes",
      "test_remove_nonexistent_node",
      "test_add_multiple_nodes",
      "test_add_node",
      "test_edge_case_single_node_partition",
      "test_network_simulator_creation",
      "test_simulator_config_serialization",
      "test_edge_case_zero_nodes",
      "test_heal_partition",
      "test_high_drop_rate_config",
      "test_remove_node",
      "test_create_partition",
      "test_consensus_metrics_edge_cases",
      "test_throughput_metrics_edge_cases",
      "test_network_metrics_creation",
      "test_network_metrics_serialization",
      "test_latency_metrics_serialization",
      "test_throughput_metrics_serialization",
      "test_metrics_clone",
      "test_latency_metrics_edge_cases",
      "test_metrics_debug_format",
      "test_metrics_with_realistic_values",
      "test_consensus_metrics_serialization",
      "test_metrics_serialization_roundtrip",
      "test_node_addition_maintains_invariants",
      "test_simulator_creation_with_any_valid_config",
      "test_simulator_config_bounds",
      "test_scenario_execution_always_succeeds",
      "arb_simulator_config",
      "arb_scenario_config",
      "test_node_removal_maintains_consistency",
      "arb_network_conditions",
      "test_partition_probability_affects_partition_size"
    ],
    "tested_functions": [
      "network_topology_creation",
      "default",
      "to_string",
      "attack_visualization_creation",
      "visualization_config_creation",
      "from_secs",
      "scenario_config_clone",
      "network_conditions_debug",
      "scenario_config_debug",
      "from_secs",
      "from_millis",
      "metrics_debug_format",
      "latency_metrics_edge_cases",
      "network_metrics_creation",
      "latency_metrics_serialization",
      "consensus_metrics_serialization",
      "clone",
      "from_nanos",
      "metrics_clone",
      "throughput_metrics_edge_cases",
      "metrics_with_realistic_values",
      "new",
      "network_metrics_serialization",
      "from_secs",
      "from_millis",
      "consensus_metrics_edge_cases",
      "throughput_metrics_serialization",
      "partition_probability_affects_partition_size",
      "add_node",
      "scenario_execution_always_succeeds",
      "new",
      "from_millis",
      "node_removal_maintains_consistency",
      "block_on",
      "simulator_config_bounds",
      "max",
      "min",
      "node_addition_maintains_invariants",
      "metrics_serialization_roundtrip",
      "len",
      "is_ok",
      "simulator_creation_with_any_valid_config",
      "clone",
      "as_millis",
      "default",
      "let"
    ],
    "coverage_stats": {
      "total_lines": 2677,
      "test_lines": 1996,
      "covered_lines": 67,
      "coverage_percentage": 2.50280164363093,
      "uncovered_functions": [
        "test_network_partition_high_partition_probability",
        "heal_partition",
        "test_error_handling_and_recovery",
        "test_add_multiple_nodes",
        "test_dynamic_network_conditions",
        "execute_sybil_attack",
        "test_lan_profile",
        "get_stats",
        "test_scenario_maximum_loss_rate",
        "test_attack_simulator_creation",
        "arb_scenario_config",
        "test_interleaved_operations",
        "launch_attack",
        "test_basic_connectivity_large_network",
        "visualize_latency_distribution",
        "test_metrics_debug_format",
        "test_scenario_extreme_message_rate",
        "test_remove_node",
        "test_packet_loss",
        "test_concurrent_simulations",
        "arb_simulator_config",
        "test_node_removal_maintains_consistency",
        "test_high_drop_rate_config",
        "test_network_partition_scenario",
        "test_bandwidth_limiting",
        "complete_attack",
        "test_full_simulation_lifecycle",
        "calculate_latency",
        "test_simulator_creation_with_any_valid_config",
        "test_basic_connectivity",
        "test_byzantine_tolerance",
        "test_network_simulator_creation",
        "remove_node",
        "generate_html_dashboard",
        "test_scenario_config_creation",
        "sybil_fake_voting",
        "apply_bandwidth_limit",
        "test_simulator_config_bounds",
        "test_visualization_config_creation",
        "create_partition",
        "test_network_partition",
        "test_network_partition_small_network",
        "test_consensus_metrics_edge_cases",
        "transmit_message",
        "test_profile_serialization",
        "get_metrics",
        "test_attack_visualization_creation",
        "test_simulator_config_serialization",
        "test_add_nodes",
        "test_scenario_execution_always_succeeds",
        "execute_routing_attack",
        "test_attack_metrics",
        "sybil_flooding",
        "test_sybil_attack",
        "update_conditions",
        "test_metrics_with_realistic_values",
        "get_active_attacks",
        "test_throughput_metrics_serialization",
        "add_nodes",
        "execute_eclipse_attack",
        "stop_attack",
        "test_byzantine_tolerance_scenario",
        "arb_network_conditions",
        "execute_byzantine_attack",
        "execute_dos_attack",
        "visualize_metrics_timeline",
        "test_add_node",
        "test_network_metrics_creation",
        "test_latency_metrics_serialization",
        "test_byzantine_tolerance_minimum_nodes",
        "visualize_throughput",
        "test_edge_case_single_node_partition",
        "test_latency_metrics_edge_cases",
        "test_throughput_metrics_edge_cases",
        "execute_ddos_attack",
        "test_network_metrics_serialization",
        "test_scenario_config_clone",
        "test_simulator_state_consistency",
        "test_heal_partition",
        "test_network_stats",
        "visualize_topology",
        "test_scenario_config_debug",
        "test_scenario_zero_nodes",
        "should_drop_packet",
        "generate_dashboard",
        "test_edge_case_zero_nodes",
        "test_basic_connectivity_scenario",
        "test_stress_conditions",
        "test_satellite_profile",
        "test_network_topology_creation",
        "test_consensus_metrics_serialization",
        "test_metrics_serialization_roundtrip",
        "test_resource_management",
        "update_outage_state",
        "conditions",
        "test_partition_probability_affects_partition_size",
        "test_basic_connectivity_single_node",
        "test_remove_nonexistent_node",
        "test_scenario_extreme_latency",
        "test_byzantine_tolerance_high_latency",
        "visualize_attack_timeline",
        "test_node_addition_maintains_invariants",
        "test_network_conditions_debug",
        "with_conditions",
        "test_simulation_edge_cases",
        "add_connection",
        "sybil_partitioning",
        "test_metrics_clone",
        "test_dos_attack",
        "test_scenario_config_edge_cases",
        "test_create_partition"
      ],
      "uncovered_modules": []
    }
  }
}