[package]
name = "neural-mesh"
version = "0.1.0"
edition = "2021"
authors = ["rUv <https://github.com/ruvnet>"]
description = "Distributed neural cognition layer for Synaptic Neural Mesh"
repository = "https://github.com/ruvnet/Synaptic-Neural-Mesh"
license = "MIT OR Apache-2.0"
keywords = ["neural", "mesh", "distributed", "cognition", "wasm"]
categories = ["science", "wasm", "algorithms"]

[dependencies]
# Core QuDAG integration
qudag-core = { path = "../qudag-core" }

# Enhanced ruv-FANN
ruv-fann = { path = "../ruv-FANN", features = ["wasm", "gpu", "simd"] }

# DAA integration
daa-swarm = { path = "../daa-swarm" }

# Async runtime
tokio = { version = "1.0", features = ["full"] }
futures = "0.3"
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# UUID and crypto
uuid = { version = "1.0", features = ["v4", "serde"] }
blake3 = "1.5"
rand = "0.8"

# Concurrency
tokio-util = "0.7"
dashmap = "5.5"
crossbeam = "0.8"
parking_lot = "0.12"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Logging
tracing = "0.1"

# WASM support
wasm-bindgen = { version = "0.2", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }

# Neural network math
ndarray = { version = "0.15", features = ["rayon"] }
ndarray-linalg = { version = "0.16", optional = true }

# Performance
rayon = "1.8"

[dev-dependencies]
tokio-test = "0.4"
proptest = "1.0"
criterion = { version = "0.5", features = ["html_reports"] }

[features]
default = ["std", "neural-sync"]
std = []
wasm = ["wasm-bindgen", "js-sys", "web-sys", "console_error_panic_hook"]
gpu = ["ndarray-linalg", "ruv-fann/gpu"]
neural-sync = []
distributed-training = []

[[bench]]
name = "mesh_benchmarks"
harness = false

[[example]]
name = "simple_mesh"
path = "examples/simple_mesh.rs"